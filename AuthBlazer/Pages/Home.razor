@page "/home"
@using AuthBlazer.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@inject ApplicationDbContext DbContext
@inject EmployeeService employeeService
@layout MainLayout

<PageTitle>Home</PageTitle>
<div class="mt-2 mb-5 me-4">
    <RadzenBreadCrumb>
        <RadzenBreadCrumbItem Path="/home" Text="Home" />
    </RadzenBreadCrumb>
</div>

<div class="text-center d-flex justify-content-between mt-5">
    <RadzenCard class="shadow w-50 d-flex justify-content-between" Style="max-width: 300px; margin: auto; display: inline-block; margin-right: 20px;">
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16"><path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5"/></svg>
        </div>
        <div class="p-1">
            <h5>Total Employees</h5>
            <h2>@totalEmployees</h2>
            <a href="/Employees">Details</a>
        </div>
    </RadzenCard>
    <RadzenCard class="shadow w-50 d-flex justify-content-between" Style="max-width: 300px; margin: auto; display: inline-block;">
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-person-vcard-fill" viewBox="0 0 16 16"><path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm9 1.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 0-1h-4a.5.5 0 0 0-.5.5M9 8a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 0-1h-4A.5.5 0 0 0 9 8m1 2.5a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.5.5m-1 2C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1 1 0 0 0 2 13h6.96q.04-.245.04-.5M7 6a2 2 0 1 0-4 0 2 2 0 0 0 4 0"/></svg>
        </div>
        <div class="p-1">
            <h5>Total Users</h5>
            <h2>@UserCount</h2>
            <a href="/userlist">Details</a>
        </div>
    </RadzenCard>
    <RadzenCard class="shadow w-50 d-flex justify-content-between" Style="max-width: 300px; margin: auto; display: inline-block;">
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-currency-dollar" viewBox="0 0 16 16"><path d="M4 10.781c.148 1.667 1.513 2.85 3.591 3.003V15h1.043v-1.216c2.27-.179 3.678-1.438 3.678-3.3 0-1.59-.947-2.51-2.956-3.028l-.722-.187V3.467c1.122.11 1.879.714 2.07 1.616h1.47c-.166-1.6-1.54-2.748-3.54-2.875V1H7.591v1.233c-1.939.23-3.27 1.472-3.27 3.156 0 1.454.966 2.483 2.661 2.917l.61.162v4.031c-1.149-.17-1.94-.8-2.131-1.718zm3.391-3.836c-1.043-.263-1.6-.825-1.6-1.616 0-.944.704-1.641 1.8-1.828v3.495l-.2-.05zm1.591 1.872c1.287.323 1.852.859 1.852 1.769 0 1.097-.826 1.828-2.2 1.939V8.73z"/></svg>
        </div>
        <div class="p-1">
            <h5>Total Salary</h5>
            <h2>@FormatSalary(totalSalary)</h2>
            <a href="/Employees">Details</a>
        </div>
    </RadzenCard>
    <RadzenCard class="shadow w-50 d-flex justify-content-between" Style="max-width: 300px; margin: auto; display: inline-block;">
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-person-workspace" viewBox="0 0 16 16"><path d="M4 16s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-5.95a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5"/><path d="M2 1a2 2 0 0 0-2 2v9.5A1.5 1.5 0 0 0 1.5 14h.653a5.4 5.4 0 0 1 1.066-2H1V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v9h-2.219c.554.654.89 1.373 1.066 2h.653a1.5 1.5 0 0 0 1.5-1.5V3a2 2 0 0 0-2-2z"/></svg>
        </div>
        <div class="p-1">
            <h5>Total Designations</h5>
            <h2>@totalDistinctDesignations</h2>
            <a href="/Employees">Details</a>
        </div>
    </RadzenCard>
</div>

<div class="row mt-2">
    <div class="col-6 text-center container shadow bg-white rounded-5 mt-5">
    <h3 class="mt-4">Salary by Join Date</h3>
    <RadzenChart class="mt-5">
        <RadzenAreaSeries Data="@salaryByJoinDate" CategoryProperty="JoinDate" ValueProperty="Salary" />
    </RadzenChart>
    </div>

    <div class="container text-center col-5 shadow bg-white rounded-5 mt-5">
        <h3 class="mt-4">Employee Count by Designation</h3>
        <RadzenCard class="w-100">
            <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
            <RadzenLabel Text="Show Data Labels" Component="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
        </RadzenCard>
        <RadzenChart>
            <RadzenPieSeries Data="@designationCounts" CategoryProperty="Designation" ValueProperty="EmployeeCount">
                <RadzenSeriesDataLabels Visible="@showDataLabels" />
            </RadzenPieSeries>
        </RadzenChart>
    </div>
</div>

@code {
    List<EmployeeCountByCity> employeeCounts = new List<EmployeeCountByCity>();
    List<EmployeeCountByDesignation> designationCounts = new List<EmployeeCountByDesignation>();
    List<ApplicationUser> latestUsers = new List<ApplicationUser>();
    List<SalaryByJoinDateData> salaryByJoinDate = new List<SalaryByJoinDateData>();
    int totalEmployees;
    int UserCount;
    int totalDistinctDesignations;
    private decimal totalSalary;
    bool showDataLabels = false;

    protected override async Task OnInitializedAsync()
    {
        employeeCounts = await employeeService.GetEmployeeCountByCity();
        totalEmployees = await employeeService.GetTotalEmployeeCount();
        designationCounts = await employeeService.GetEmployeeCountByDesignation();
        totalDistinctDesignations = await employeeService.GetTotalDistinctDesignations();
        totalSalary = await employeeService.GetTotalSalary();

        var latestIdentityUsers = await DbContext.Users.OrderByDescending(u => u.Id).ToListAsync();
        latestUsers = latestIdentityUsers.Select(u => new ApplicationUser
        {
            Id = u.Id
        }).ToList();
        UserCount = latestIdentityUsers.Count;

        var salaries = await employeeService.GetSalaryByJoinDate();
        salaryByJoinDate = salaries.Select(s => new AuthBlazer.Pages.Home.SalaryByJoinDateData
        {
            JoinDate = s.JoinDate,
            Salary = s.Salary
        }).ToList();  
        }

    public class SalaryByJoinDateData
    {
        public DateTime JoinDate { get; set; }
        public decimal Salary { get; set; }
    }

    public string FormatSalary(decimal salary)
    {
        string formattedSalary = salary.ToString("C", new CultureInfo("fr-FR")); // Example culture info
        formattedSalary = formattedSalary.Replace("€", "DH");
        return formattedSalary;
    }
}
