@page "/edituser/{userId}"
@using Microsoft.EntityFrameworkCore
@using AuthBlazer.Data 
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3 class="ms-1">Edit User</h3>
<hr/>
@if (User == null)
{
    <p>Loading...</p>
}
else
{
    <div class="bg-white border m-2 p-4 ">
    <div class="form-group">
        <label for="email">UserName</label>
        <input id="email" class="form-control" @bind="@User.UserName" />
    </div>

    <div class="form-group">
        <label for="username">Username</label>
        <input id="username" class="form-control" @bind="@User.Email" />
    </div>

    <div class="form-group">
        <label for="phoneNumber">Phone Number</label>
        <input id="phoneNumber" class="form-control" @bind="@User.PhoneNumber" />
    </div>
    <div class="d-flex justify-content-end gap-3 mt-3">
        <input type="button" class="btn btn-white" @onclick="@Cancel" value="Cancel"/>
        <button class="btn btn-dark text-white" @onclick="UpdateUser">Update</button>
    </div>
    </div>
}

@code {
    private ApplicationUser User { get; set; }
    [Parameter] public string UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadUser();
    }

    private async Task LoadUser()
    {
        var identityUser = await DbContext.Users.FirstOrDefaultAsync(u => u.Id == UserId);
        if (identityUser != null)
        {
            User = new ApplicationUser
            {
                Id = identityUser.Id,
                UserName = identityUser.UserName,
                Email = identityUser.Email,
                PhoneNumber = identityUser.PhoneNumber
            };
        }
    }

    private async Task UpdateUser()
    {
        if (User != null)
        {
            var existingUser = await DbContext.Users.FirstOrDefaultAsync(u => u.Id == User.Id);
            if (existingUser != null)
            {
                existingUser.Email = User.Email;
                existingUser.UserName = User.UserName;
                existingUser.PhoneNumber = User.PhoneNumber;

                await DbContext.SaveChangesAsync();
            }
        }
            NavigationManager.NavigateTo("userlist");
        
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("userlist");
    }
}
