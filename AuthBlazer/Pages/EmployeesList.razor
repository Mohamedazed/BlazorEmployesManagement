@page "/Employees"
@using AuthBlazer.Data
@inject EmployeeService employeesServices
@using Microsoft.AspNetCore.Components.Routing
@using Radzen.Blazor
@using Radzen
@using Microsoft.AspNetCore.Components
@attribute [Authorize(Roles = "Admin")]

<div class="">
    <div class="mt-2 mb-5 me-4">
        <RadzenBreadCrumb>
            <RadzenBreadCrumbItem Path="/home" Text="Home" />
            <RadzenBreadCrumbItem Path="/Employees" Text="Employees"/>
        </RadzenBreadCrumb>
    </div>
</div>
<div class="">
    <div class="d-flex justify-content-between mb-3">
        <h3>Employees List</h3>
        <NavLink class="btn btn-dark text-white" href="AddNewEmployee">
            <span class="me-2 pointer-event oi-plus" aria-hidden="true"><b class="ms-2">New Employee</b></span>
        </NavLink>
    </div>
    @if (EmpObj == null)
    {
        <div class="mt-5 text-center d-flex justify-content-center">
            <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Dark" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        </div>
    }
    else
    {
        <RadzenDataGrid TItem="Employee" AllowFiltering="true" AllowColumnResize="true" AllowPaging="true" PageSize="9"
                        class="bg-danger text-center" Data="@EmpObj" AllowSorting="true" FilterMode="FilterMode.Simple"
                        PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" ColumnWidth="300"
                        LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
            <Columns>
                <RadzenDataGridColumn TItem="Employee" Title="Avatar & Full Name" Width="160px">
                    <Template Context="employee">
                        <div class="d-flex justify-content-start align-items-center">
                            <img src="data:image;base64,@Convert.ToBase64String(employee.ImagePath)" class="border shadow-sm rounded-pill"
                                 alt="Employee Image" style="max-width: 50px; margin-right: 10px;" />
                            <h4><b>@employee.FullName</b></h4>
                        </div>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Employee" Property="Address" Title="Address" />
                <RadzenDataGridColumn TItem="Employee" Property="Email" Title="Email" />
                <RadzenDataGridColumn TItem="Employee" Property="Phone" Title="Phone" />
                <RadzenDataGridColumn TItem="Employee" Property="City" Title="City" />
                <RadzenDataGridColumn TItem="Employee" Property="Designation" Title="Designation" />
                <RadzenDataGridColumn>
                    <Template Context="employee">
                        <div class="ms-1 d-flex justify-content-center gap-2">
                            <a class="rounded-circle btn  shadow-sm" href="EditEmployee/@employee.Id"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                      <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                      <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                </svg>
                            </a> 
                            <p class="mx-2 mt-2">|</p>
                            <button class="rounded-circle shadow-sm btn " @onclick="@(async () => await DeleteEmployee(employee.Id))">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                      <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5"/>
                                    </svg>
                            </button>
                        </div>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
</div>

@code {
    List<Employee>? EmpObj;
    string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        EmpObj = await employeesServices.GetAllEmployees();
    }

    private async Task DeleteEmployee(int id)
    {
        var employee = await employeesServices.GetEmployeeById(id);
        if (employee != null)
        {
            await employeesServices.DeleteEmployee(employee);
            EmpObj = await employeesServices.GetAllEmployees();
        }
    }

    private async Task HandleSearchInputChange(string value)
    {
        searchString = value.Trim().ToLower();
        EmpObj = await employeesServices.SearchEmployees(searchString);
    }
}